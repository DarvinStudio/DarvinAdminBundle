{% import _self as this %}

{% form_theme form '@DarvinAdmin/form/fields.html.twig' %}

{% trans_default_domain 'admin' %}

{% macro submit(form) %}
    <div class="table_view_content">
        {% for row in form if 'submit' == row.vars.block_prefixes[1] %}
            {{ form_row(row) }}
        {% endfor %}
    </div>
{% endmacro %}

{% if entity is not defined %}

    {% set entity = null %}

{% endif %}
{% if is_widget is not defined %}

    {% set is_widget = false %}

{% endif %}

{% set field_groups = meta.configuration.form[view_type].field_groups %}
{% set submit       = this.submit(form) %}

<div class="js-form-container">
    {% if entity %}
        {{ admin_widget_actions(entity, {'view_type': view_type}) }}
    {% endif %}
    <div class="edit_container">
        {{ form_errors(form) }}
        {{ form_start(form, {'attr': {'class': 'js-ajax', 'data-reload-page': is_widget ? 1 : 0, 'data-target': '.js-form-container'}}) }}
        {% if not is_widget %}
            <div class="table_view_content">
                {{ submit }}
            </div>
        {% endif %}
        {% for name, fields in field_groups %}
            <div class="edit_block spoiler_container">
                <div class="edit_header spoiler_links">
                    <div class="edit_header_name">
                        <p>{{ (meta.baseTranslationPrefix ~ 'field_group.' ~ name)|trans }}</p>
                    </div>
                </div>
                <div class="edit_content spoiler_body">
                    <div class="table_view_content">
                        {% for field, attr in fields if form[field] is defined %}
                            {{ form_row(form[field]) }}
                        {% endfor %}
                    </div>
                </div>
            </div>
        {% endfor %}
        <div class="table_view_content">
            {{ form_rest(form) }}
            {{ submit }}
        </div>
        {{ form_end(form) }}
    </div>
</div>
