{% extends 'form_div_layout.html.twig' %}

{% use '@VichUploader/Form/fields.html.twig' %}

{% trans_default_domain 'admin' %}

{# Macros #}

{% macro image(image, disableable, editable, exterminatable) %}
    <div class="custom-dropzone__item js-image" data-id="{{ image.id }}">
        <a class="custom-dropzone__item-img" href="{{ image|image_original }}" data-size="{{ image.dimensions }}">
            <img src="{{ vich_uploader_asset(image, 'file')|imagine_filter('darvin_admin_thumb') }}" alt="">
        </a>
        {% if disableable %}
            <div class="custom-dropzone__item-toggle">
                <a class="no-photoswipe js-image-toggle js-image-{{ image.enabled ? 'disable' : 'enable' }}"
                   data-disable-title="{% trans %}image.action.disable.submit{% endtrans %}"
                   data-disable-url="{{ path('darvin_image_image_disable', {'id': image.id}) }}"
                   data-enable-title="{% trans %}image.action.enable.submit{% endtrans %}"
                   data-enable-url="{{ path('darvin_image_image_enable', {'id': image.id}) }}"
                   href="#">
                    {{ ('image.action.' ~ (image.enabled ? 'disable' : 'enable') ~ '.submit')|trans }}
                </a>
            </div>
        {% endif %}
        {% if editable %}
            <div class="custom-dropzone__item-edit">
                <a class="no-photoswipe js-ajax"
                   href="{{ path('darvin_image_image_edit', {'id': image.id}) }}">
                    {{ 'image.action.edit.title'|trans({'%image%': image}) }}
                </a>
            </div>
        {% endif %}
        <div class="custom-dropzone__item-delete">
            <a class="no-photoswipe js-image-delete"
               data-url="{{ path('darvin_image_image_delete', {'id': image.id}) }}"
               href="#">
                {% trans %}image.action.delete.submit{% endtrans %}
            </a>
        </div>
        {% if exterminatable %}
            <input type="checkbox"
                   class="js-image-exterminate-check"
                   data-id="{{ image.id }}"
                   autocomplete="off"
                   title="{% trans %}image.action.exterminate.check{% endtrans %}">
        {% endif %}
    </div>
{% endmacro %}

{% macro is_collection(form) %}
    {%- if 'collection' == form.vars.block_prefixes[1] and (form.vars.allow_add|default or form.vars.allow_delete|default) -%}
        {{ true }}
    {%- endif -%}
{% endmacro %}

{# Common #}

{%- block form_row -%}
    {%- import _self as that -%}
    {%- set widget_attr = {} -%}
    {%- if help is not empty -%}
        {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
    {%- endif -%}
    {%- if that.is_collection(form.parent) -%}
        <div class="multiple-field__item">
            {{- form_widget(form, widget_attr) -}}
            {{- form_errors(form) -}}
        </div>
    {%- elseif compound and not that.is_collection(form) -%}
        {%- set label = form_label(form) -%}
        {%- if label -%}
            <div class="form-heading">{{- label|raw -}}</div>
        {%- endif -%}
        {{- form_widget(form, widget_attr) -}}
        {{- form_errors(form) -}}
    {%- else -%}
        {%- if show_help is not defined -%}
            {%- set show_help = true -%}
        {%- endif -%}
        {%- if wrap is not defined -%}
            {%- set wrap = true -%}
        {%- endif -%}
        {%- if wrap -%}
            {%- set class = 'form-item' -%}
            {%- if admin_group -%}
                {%- set class = class ~ ' -double' -%}
            {%- endif -%}
            {%- if row_attr is not defined -%}
                {%- set row_attr = {} -%}
            {%- endif -%}
            {%- set row_attr = row_attr|merge({'class': (row_attr.class|default ~ ' ' ~ class)|trim}) -%}
            <div {% with {attr: row_attr} %}{{ block('attributes') }}{% endwith %}>
        {%- endif -%}
        {{- form_label(form) -}}
        <div class="form-item__field"{% if data_type is defined %} data-type="{{ data_type }}"{% endif %}>
            {{- form_widget(form, widget_attr) -}}
            {{- form_errors(form) -}}
        </div>
        {%- if admin_group and form.parent -%}
            {%- for row in form.parent -%}
                {%- if row.vars.admin_group == admin_group -%}
                    {{- form_row(row, {'show_help': false, 'wrap': false}) -}}
                {%- endif -%}
            {%- endfor -%}
        {%- endif -%}
        {%- if show_help -%}
            {{- form_help(form, {'help_html': true}) -}}
        {%- endif -%}
        {%- if wrap -%}
            </div>
        {%- endif -%}
    {%- endif -%}
{%- endblock form_row -%}

{%- block form_label -%}
    {%- set element = 'span' -%}
    {%- if label_add_class is not defined or label_add_class -%}
        {%- set label_attr = label_attr|merge({'class': (label_attr.class|default ~ ' form-item__label')|trim}) -%}
    {%- endif -%}
    {{- parent() -}}
{%- endblock form_label -%}

{%- block form_widget_simple -%}
    {%- if attr['data-input'] is not defined -%}
        {%- set attr = attr|merge({'data-input': ''}) -%}
    {%- endif -%}
    {%- if clearable is not defined -%}
        {%- set clearable = type is not defined or type in ['email', 'text'] -%}
    {%- endif -%}
    <div class="form-item__input{% if clearable %} js-with-btn-clear{% endif %}"{% if data_type is defined %} data-type="{{ data_type }}"{% endif %}>
        {{- parent() -}}
        {%- if clearable -%}
            <button type="button" data-btn-clear title="{% trans %}form.simple.clear{% endtrans %}">&nbsp;</button>
        {%- endif -%}
    </div>
{%- endblock form_widget_simple -%}

{%- block form_errors -%}
    {%- if errors|length > 0 -%}
        <div class="form-item__error js-form-errors">
            {{- parent() -}}
        </div>
    {%- endif -%}
{%- endblock form_errors -%}

{%- block form_help -%}
    <div class="form-item__description">
        {%- if help is not empty -%}
            {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' help-text')|trim}) -%}
            {%- if translation_domain is same as(false) -%}
                {%- if help_html is same as(false) -%}
                    {{- help -}}
                {%- else -%}
                    {{- help|raw -}}
                {%- endif -%}
            {%- else -%}
                {%- if help_html is same as(false) -%}
                    {{- help|trans(help_translation_parameters, translation_domain) -}}
                {%- else -%}
                    {{- help|trans(help_translation_parameters, translation_domain)|raw -}}
                {%- endif -%}
            {%- endif -%}
        {%- endif -%}
    </div>
{%- endblock form_help -%}

{# Generic widgets #}

{%- block checkbox_widget -%}
    <label class="custom-checkbox">
        {{- parent() -}}
        {%- if checkbox_show_label is defined and checkbox_show_label -%}
            {%- set label_add_class = false -%}
            {{- block('form_label') -}}
        {%- else -%}
            <span></span>
        {%- endif -%}
    </label>
{%- endblock checkbox_widget -%}

{%- block choice_row -%}
    {%- if expanded -%}
        {%- set compound  = false -%}
        {%- set data_type = 'checkbox' -%}
        {%- set show_help = false -%}
    {%- endif -%}
    {{- block('form_row') -}}
{%- endblock choice_row -%}

{%- block choice_widget_collapsed -%}
    <div class="custom-select js-chosen"{% if data_type is defined %} data-type="{{ data_type }}"{% endif %}>
        {{- parent() -}}
        {%- if not multiple and not required -%}
            <button type="button" class="custom-select__btn-reset" data-btn-reset title="{% trans %}form.select.reset{% endtrans %}">&nbsp;</button>
        {%- endif -%}
    </div>
{%- endblock choice_widget_collapsed -%}

{%- block choice_widget_expanded -%}
    <div class="form-item__сheckbox">
        {%- for child in form -%}
            {{- form_widget(child, {'checkbox_show_label': true}) -}}
            {{- form_errors(child) -}}
        {%- endfor -%}
    </div>
{%- endblock choice_widget_expanded -%}

{%- block collection_widget -%}
    {%- if allow_add or allow_delete -%}
        {%- set attr = attr|merge({'class': (attr.class|default ~ ' multiple-field js-collection')|trim}) -%}
        {%- if allow_add -%}
            {%- set attr = attr|merge({
                'data-allow-add': 1,
                'data-index':     form.children is not empty ? max(form.children|keys)|number_format + 1 : 0,
                'data-name':      name,
            }) -%}
        {%- endif -%}
        {%- if allow_delete -%}
            {%- set attr = attr|merge({'data-allow-delete': 1}) -%}
        {%- endif -%}
    {%- endif -%}
    {{- parent() -}}
{%- endblock collection_widget -%}

{# Custom widgets #}

{%- block a2lix_translations_row -%}
    {%- if 1 == form|length -%}
        {%- for locale, child in form -%}
            {{- form_widget(child) -}}
            {{- form_errors(child) -}}
        {%- endfor -%}
    {%- else -%}
        <div class="form-tabs js-translations">
            <div class="form-tabs__container tabs js-tabs">
                <div class="tabs__nav">
                    {%- for locale, child in form -%}
                        <div class="tabs__nav-item js-translation-toggle" data-target=".{{ child.vars.id }}">
                            <img src="{{ asset(darvin_admin.frontendPath ~ '/assets/images/icons/lang-' ~ locale ~ '.svg') }}" alt="">
                            {{- ('locale.' ~ locale)|trans -}}
                        </div>
                    {% endfor %}
                </div>
                <div class="tabs__content">
                    {%- for locale, child in form -%}
                        <div class="tabs__content-item js-translation-tab {{ child.vars.id }}" data-locale="{{ locale }}">
                            <div class="tabs__content-item-lang">
                                <img src="{{ asset(darvin_admin.frontendPath ~ '/assets/images/icons/lang-' ~ locale ~ '.svg') }}" alt="">
                            </div>
                            {{- form_widget(child) -}}
                            {{- form_errors(child) -}}
                        </div>
                    {%- endfor -%}
                </div>
            </div>
        </div>
    {%- endif -%}
    {{- form_errors(form) -}}
{%- endblock a2lix_translations_row -%}

{%- block ckeditor_widget_extra -%}
    ['i', 'span'].forEach(function (tag) {
        CKEDITOR.dtd.$removeEmpty[tag] = false;
    });

    CKEDITOR.on('instanceReady', function () {
        CKEDITOR.instances['{{ id }}'].config.contentsLangDirection = CKEDITOR.lang.rtl['{{ locale }}'] ? 'rtl' : 'ltr';
    });
{%- endblock ckeditor_widget_extra -%}

{%- block darvin_admin_ace_editor_row -%}
    {%- set show_help = false -%}
    {{- block('form_row') -}}
{%- endblock darvin_admin_ace_editor_row -%}

{%- block darvin_admin_ace_editor_widget -%}
    <textarea {{ block('widget_attributes') }}>{{ value }}</textarea>
    <div id="{{ id }}_ace-editor"></div>
    <script>
        $(function () {
            ace.config.set('basePath', '/bundles/darvinadmin/node_modules/ace-builds/src-min-noconflict');
            var $textarea = $('#{{ id }}').hide(),
                editor    = ace.edit('{{ id }}_ace-editor', JSON.parse('{{ config|json_encode|e('js') }}')),
                ready     = false;
            editor.setShowPrintMargin(false);
            editor.session.setValue($textarea.val());
            editor.session.on('change', function () {
                $textarea.val(editor.session.getValue());
            });
            editor.renderer.on('afterRender', function () {
                if (ready) {
                    return;
                }
                $(editor.container)
                {%- for name, value in attr -%}
                    .attr('{{ name }}', '{{ value }}')
                    {%- endfor -%}
                    {%- for name, value in style -%}
                    .css({'{{ name }}': '{{ value }}'})
                {%- endfor -%}
                ;
                ready = true;
            });
        });
    </script>
{%- endblock darvin_admin_ace_editor_widget -%}

{%- block darvin_admin_ck_editor_row -%}
    {%- set data_type = 'ckeditor' -%}
    {%- set show_help = false -%}
    {{- block('form_row') -}}
{%- endblock darvin_admin_ck_editor_row -%}

{%- block darvin_admin_dropzone_row -%}
    {%- set compound = false -%}
    {%- set row_attr = {
        'data-type': 'dropzone',
    } -%}
    {{- block('form_row') -}}
{%- endblock darvin_admin_dropzone_row -%}

{%- block darvin_admin_dropzone_widget -%}
    {%- import _self as that -%}
    <div class="custom-dropzone{% if data and data is not empty %} js-images{% endif %}">
        {%- for name, child in form -%}
            {%- set attr = child.vars.attr -%}
            {%- if 'dropzone' == name -%}
                {%- set attr = attr|merge({'class': (attr.class|default ~ ' custom-dropzone__upload-area')|trim}) -%}
            {%- endif -%}
            {{- form_widget(child, {'attr': attr}) -}}
            {{- form_errors(child) -}}
        {%- endfor -%}
        {%- if data and data is not empty -%}
            <div class="custom-dropzone__list js-image-sortable js-photoswipe-gallery" data-sort-url="{{ path('darvin_image_image_sort') }}">
                {%- for image in data -%}
                    {%- if image.id -%}
                        {{- that.image(image, disableable, editable, true) -}}
                    {%- endif -%}
                {%- endfor -%}
            </div>
            <button type="button"
                    class="js-image-exterminate-submit"
                    data-url="{{ path('darvin_image_image_exterminate') }}"
                    onclick="return confirm('{{ 'image.action.exterminate.confirm'|trans|e('js') }}');"
                    style="display: none;">
                {% trans %}image.action.exterminate.submit{% endtrans %}
            </button>
        {%- endif -%}
    </div>
{%- endblock darvin_admin_dropzone_widget -%}

{%- block darvin_admin_el_finder_text_widget -%}
    {%- set margin = 0.1 -%}
    {%- set url    = path('elfinder', {'instance': 'darvin_admin_text', 'field': full_name}) -%}
    {{- block('form_widget') -}}
    <button type="button"
            title="{% trans %}form.el_finder_text.title{% endtrans %}"
            onclick="window.open('{{ url }}', null, [
                        'width=' + (window.outerWidth - window.outerWidth * {{ margin }} * 2),
                        'height=' + (window.outerHeight - window.outerWidth * {{ margin }} * 2),
                        'left=' + (window.outerWidth * {{ margin }}),
                        'top=' + (window.outerWidth * {{ margin }})
                    ].join(','));">
        &hellip;
    </button>
{%- endblock darvin_admin_el_finder_text_widget -%}

{%- block darvin_admin_position_widget -%}
    <div class="table-row__position"{% if level is not same as(null) %} data-level="{{ level }}"{% endif %}>
        {%- set clearable = false -%}
        {{- block('form_widget') -}}
    </div>
{%- endblock darvin_admin_position_widget -%}

{%- block darvin_admin_slug_suffix_widget -%}
    {%- set url_parts = (app.request.baseUrl ~ route_path)|replace({'{_locale}': app.request.locale})|split('{' ~ route_param_slug ~ '}') -%}
    {%- set url_prefix = url_parts[0] ~ slug_prefix -%}
    {%- set url_suffix = url_parts[1] -%}
    {%- set url_parts = [url_prefix] -%}
    {%- if not slug -%}
        {%- set url_parts = url_parts|merge(['___']) -%}
    {%- endif -%}
    {%- set url_parts = url_parts|merge([url_suffix]) -%}
    {%- set url = slug ? path(route, {(route_param_slug): slug}) : url_parts|join('') -%}
    <div class="custom-link">
        <div class="slug_suffix js-slug{% if not slug %} js-slug-changed{% endif %}"
             data-default-url="{{ url }}"
             data-parent-select="{{ parent_select_selector }}"
             data-url-prefix="{{ url_prefix }}"
             data-url-suffix="{{ url_suffix }}">
            <div class="custom-link__value js-slug-link"{% if errors is not empty %} style="display: none;"{% endif %}>
                <a href="{{ url }}" target="_blank">{{ url }}</a>
                <button class="edit js-slug-edit" type="button">
                    {% trans %}slug_suffix.edit{% endtrans %}
                </button>
                <button class="reset js-slug-reset" type="button" style="display: none;">
                    {% trans %}slug_suffix.reset{% endtrans %}
                </button>
            </div>
            <div class="custom-link__form js-slug-form"{% if errors is empty %} style="display: none;"{% endif %}>
                <span class="url_prefix js-slug-url-prefix">{{ url_prefix ~ (slug ~ '$')|replace({(data ~ '$'): ''}) }}</span>
                <div class="input_value">
                    {%- set attr = {'data-default': data} -%}
                    {{- block('form_widget') -}}
                </div>
                <span class="url_suffix">{{ url_suffix }}</span>
                <button class="update js-slug-update" type="button">
                    {% trans %}slug_suffix.update{% endtrans %}
                </button>
                <button class="reset js-slug-reset" type="button" style="display: none;">
                    {% trans %}slug_suffix.reset{% endtrans %}
                </button>
            </div>
        </div>
    </div>
{%- endblock darvin_admin_slug_suffix_widget -%}

{%- block darvin_image_image_row -%}
    {%- set compound = false -%}
    {{- block('form_row') -}}
{%- endblock darvin_image_image_row -%}

{%- block darvin_image_image_widget -%}
    {%- import _self as that -%}
    {%- if data -%}
        <div class="js-photoswipe-gallery">
            {{- that.image(data, disableable, editable) -}}
        </div>
    {%- endif -%}
    {{- block('form_widget') -}}
{%- endblock darvin_image_image_widget -%}

{%- block darvin_utils_triplebox_row -%}
    {%- set compound = false -%}
    {{- block('form_row') -}}
{%- endblock darvin_utils_triplebox_row -%}

{%- block darvin_utils_triplebox_widget -%}
    <div class="form-item__сheckbox">
        <div class="custom-triplebox js-triplebox">
            {%- for child in form -%}
                {{- form_widget(child) -}}
                {{- form_errors(child) -}}
            {%- endfor -%}
            <span></span>
        </div>
    </div>
{%- endblock darvin_utils_triplebox_widget -%}

{%- block vich_file_row -%}
    {%- set compound = false -%}
    {{- parent() -}}
{%- endblock vich_file_row -%}
