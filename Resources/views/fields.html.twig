{% extends 'form_div_layout.html.twig' %}

{% use '@VichUploader/Form/fields.html.twig' %}

{% trans_default_domain 'admin' %}

{# Macros #}

{% macro image(image, toggle_enabled) %}
    <div class="js-image" data-id="{{ image.id }}">
        <a href="{{ image|image_original }}" data-size="{{ image.dimensions }}">
            <img src="{{ vich_uploader_asset(image, 'file')|imagine_filter('darvin_admin_thumb') }}" alt="">
        </a>
        {% if toggle_enabled %}
            <a class="no-photoswipe js-image-toggle js-image-{{ image.enabled ? 'disable' : 'enable' }}"
               data-disable-title="{% trans %}image.action.disable.submit{% endtrans %}"
               data-disable-url="{{ path('darvin_image_image_disable', {'id': image.id}) }}"
               data-enable-title="{% trans %}image.action.enable.submit{% endtrans %}"
               data-enable-url="{{ path('darvin_image_image_enable', {'id': image.id}) }}"
               title="{{ ('image.action.' ~ (image.enabled ? 'disable' : 'enable') ~ '.submit')|trans }}"
               href="#">
            </a>
        {% endif %}
        <a class="no-photoswipe js-ajax"
           href="{{ path('darvin_image_image_edit', {'id': image.id}) }}"
           title="{{ 'image.action.edit.title'|trans({'%image%': image})|e('html_attr') }}">
        </a>
        <a class="no-photoswipe js-image-delete"
           data-url="{{ path('darvin_image_image_delete', {'id': image.id}) }}"
           title="{% trans %}image.action.delete.submit{% endtrans %}"
           href="#">
        </a>
    </div>
{% endmacro %}

{# Common #}

{%- block form_row -%}
    {%- set row_attr = {'class': 'form-item'} -%}
    {%- set widget_attr = {} -%}
    {%- if help is not empty -%}
        {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
    {%- endif -%}
    <div {% with {attr: row_attr|default({})} %}{{ block('attributes') }}{% endwith %}>
        {{- form_label(form) -}}
        <div class="form-item__field"{%- if data_type is defined -%} data-type="{{- data_type -}}"{%- endif -%}>
            {{- form_widget(form, widget_attr) -}}
            {{- form_errors(form) -}}
        </div>
        {%- if show_help is not defined or show_help -%}
            {{- form_help(form) -}}
        {%- endif -%}
    </div>
{%- endblock form_row -%}

{%- block form_label -%}
    {%- set element = 'span' -%}
    {%- set label_attr = label_attr|merge({'class': (label_attr.class|default ~ ' form-item__label')|trim}) -%}
    {{- parent() -}}
{%- endblock form_label -%}

{%- block form_widget_simple -%}
    {%- if clearable is not defined -%}
        {%- set clearable = type is not defined or 'text' == type -%}
    {%- endif -%}
    {%- if not clearable -%}
        {{- parent() -}}
    {%- else -%}
        {%- if attr['data-input'] is not defined -%}
            {%- set attr = attr|merge({'data-input': ''}) -%}
        {%- endif -%}
        <div class="form-item__input js-with-btn-clear"{%- if data_type is defined -%} data-type="{{- data_type -}}"{%- endif -%}>
            {{- parent() -}}
            <button type="button" data-btn-clear title="{% trans %}form.text.clear{% endtrans %}">&nbsp;</button>
        </div>
    {%- endif -%}
{%- endblock form_widget_simple -%}

{%- block form_errors -%}
    {%- if errors|length > 0 -%}
        <div class="form-item__error js-form-errors">
            {{- parent() -}}
        </div>
    {%- endif -%}
{%- endblock form_errors -%}

{%- block form_help -%}
    <div class="form-item__description">
        {%- if help is not empty -%}
            {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' help-text')|trim}) -%}
            {%- if translation_domain is same as(false) -%}
                {%- if help_html is same as(false) -%}
                    {{- help -}}
                {%- else -%}
                    {{- help|raw -}}
                {%- endif -%}
            {%- else -%}
                {%- if help_html is same as(false) -%}
                    {{- help|trans(help_translation_parameters, translation_domain) -}}
                {%- else -%}
                    {{- help|trans(help_translation_parameters, translation_domain)|raw -}}
                {%- endif -%}
            {%- endif -%}
        {%- endif -%}
    </div>
{%- endblock form_help -%}

{# Generic widgets #}

{%- block checkbox_widget -%}
    <label class="custom-checkbox">{{- parent() -}}<span></span></label>
{%- endblock checkbox_widget -%}

{%- block choice_widget_collapsed -%}
    <div class="custom-select js-chosen"{%- if data_type is defined -%} data-type="{{- data_type -}}"{%- endif -%}>
        {{- parent() -}}
        {%- if not multiple and not required -%}
            <button type="button" class="custom-select__btn-reset" data-btn-reset title="{% trans %}form.select.reset{% endtrans %}">&nbsp;</button>
        {%- endif -%}
    </div>
{%- endblock choice_widget_collapsed -%}

{%- block collection_widget -%}
    {%- set attr = attr|merge({'class': (attr.class|default ~ ' js-collection')|trim}) -%}
    {%- if allow_add -%}
        {%- set attr = attr|merge({
            'data-allow-add': 1,
            'data-index':     form.children is not empty ? max(form.children|keys)|number_format + 1 : 0,
            'data-name':      name,
        }) -%}
    {%- endif -%}
    {%- if allow_delete -%}
        {%- set attr = attr|merge({'data-allow-delete': 1}) -%}
    {%- endif -%}
    {{- parent() -}}
{%- endblock collection_widget -%}

{%- block date_widget -%}
    {%- set attr = attr|merge({'class': (attr.class|default ~ ' js-datepicker')|trim}) -%}
    {{- parent() -}}
{%- endblock date_widget -%}

{%- block datetime_widget -%}
    {%- set attr = attr|merge({'class': (attr.class|default ~ ' js-datetimepicker')|trim}) -%}
    {{- parent() -}}
{%- endblock datetime_widget -%}

{%- block time_widget -%}
    {%- set attr = attr|merge({'class': (attr.class|default ~ ' js-timepicker')|trim}) -%}
    {{- parent() -}}
{%- endblock time_widget -%}

{# Custom widgets #}

{%- block a2lix_translations_row -%}
    {{- form_errors(form) -}}
    {%- if 1 == form|length -%}
        {%- for locale, row in form -%}
            {{- form_widget(row) -}}
        {%- endfor -%}
    {%- else -%}
        <div class="form-tabs js-translations">
            <div class="form-tabs__container tabs js-tabs">
                <div class="tabs__nav">
                    {%- for locale, row in form -%}
                        <div class="tabs__nav-item js-translation-toggle" data-target=".{{ row.vars.id }}">
                            <img src="{{- asset(darvin_admin.frontendPath ~ '/assets/images/icons/lang-' ~ locale ~ '.svg') -}}" alt="">
                            {{- ('locale.' ~ locale)|trans -}}
                        </div>
                    {% endfor %}
                </div>
                <div class="tabs__content">
                    {%- for locale, row in form -%}
                        <div class="tabs__content-item js-translation-tab {{ row.vars.id }}" data-locale="{{ locale }}">
                            <div class="tabs__content-item-lang">
                                <img src="{{- asset(darvin_admin.frontendPath ~ '/assets/images/icons/lang-' ~ locale ~ '.svg') -}}" alt="">
                            </div>
                            {{- form_widget(row) -}}
                        </div>
                    {%- endfor -%}
                </div>
            </div>
        </div>
    {%- endif -%}
{%- endblock a2lix_translations_row -%}

{%- block ckeditor_widget_extra -%}
    ['i', 'span'].forEach(function (tag) {
        CKEDITOR.dtd.$removeEmpty[tag] = false;
    });

    CKEDITOR.on('instanceReady', function () {
        CKEDITOR.instances['{{ id }}'].config.contentsLangDirection = CKEDITOR.lang.rtl['{{ locale }}'] ? 'rtl' : 'ltr';
    });
{%- endblock ckeditor_widget_extra -%}

{%- block darvin_admin_ck_editor_row -%}
    {%- set data_type = 'ckeditor' -%}
    {%- set show_help = false -%}
    {{- block('form_row') -}}
{%- endblock darvin_admin_ck_editor_row -%}

{%- block darvin_admin_dropzone_widget -%}
    {%- import _self as that -%}
    {%- if data and data is not empty -%}
        <div class="js-images js-photoswipe-gallery" data-sort-url="{{ path('darvin_image_image_sort') }}">
            {%- for image in data -%}
                {%- if image.id -%}
                    {{- that.image(image, toggle_enabled) -}}
                {%- endif -%}
            {%- endfor -%}
        </div>
    {%- endif -%}
    {{- block('form_widget') -}}
{%- endblock darvin_admin_dropzone_widget -%}

{%- block darvin_admin_position_widget -%}
    <div class="table-row__position"{%- if level is not same as(null) -%} data-level="{{- level -}}"{%- endif -%}>
        {%- set clearable = false -%}
        {{- block('form_widget_simple') -}}
    </div>
{%- endblock darvin_admin_position_widget -%}

{%- block darvin_admin_triplebox_widget -%}
    <div class="form-item__сheckbox">
        <div class="custom-triplebox js-triplebox">
            {%- for child in form -%}
                {{- form_widget(child) -}}
            {%- endfor -%}
            <span></span>
        </div>
    </div>
{%- endblock darvin_admin_triplebox_widget -%}

{#
{% macro image(image, toggle_enabled) %}
    <div class="js-image" data-id="{{ image.id }}">
        <a class="js-popup" href="{{ image|image_original }}" title="{{ image.name }}" rel="images">
            <img src="{{ vich_uploader_asset(image, 'file')|imagine_filter('darvin_admin_thumb') }}" alt="">
        </a>
        <div class="image_actions">
            {% if toggle_enabled %}
                <a class="js-image-toggle js-image-{{ image.enabled ? 'disable' : 'enable' }}"
                   data-disable-title="{% trans %}image.action.disable.submit{% endtrans %}"
                   data-disable-url="{{ path('darvin_image_image_disable', {'id': image.id}) }}"
                   data-enable-title="{% trans %}image.action.enable.submit{% endtrans %}"
                   data-enable-url="{{ path('darvin_image_image_enable', {'id': image.id}) }}"
                   title="{{ ('image.action.' ~ (image.enabled ? 'disable' : 'enable') ~ '.submit')|trans }}"
                   href="#">
                </a>
            {% endif %}
            <a class="js-popup edit"
               href="{{ path('darvin_image_image_edit', {'id': image.id}) }}"
               title="{{ 'image.action.edit.title'|trans({'%image%': image})|e('html_attr') }}">
            </a>
            <a class="js-image-delete"
               data-url="{{ path('darvin_image_image_delete', {'id': image.id}) }}"
               title="{% trans %}image.action.delete.submit{% endtrans %}"
               href="#">
            </a>
        </div>
    </div>
{% endmacro %}

{%- block button_attributes -%}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ' ~ name)|trim}) %}
    {% if id %}id="{{ id }}" {% endif %}name="{{ full_name }}"{% if disabled %} disabled="disabled"{% endif -%}
    {{ block('attributes') }}
{%- endblock button_attributes -%}

{%- block checkbox_widget -%}
    <div class="input_value">
        {{ parent() }}
    </div>
    {{ block('help') }}
{%- endblock checkbox_widget -%}

{%- block choice_widget_collapsed -%}
    <div class="input_value">
        {{ parent() }}
    </div>
    {{ block('help') }}
{%- endblock choice_widget_collapsed -%}

{%- block choice_widget_expanded -%}
    <div {{ block('widget_container_attributes') }}>
        {% for child in form %}
            {{ form_label(child, null, { translation_domain: choice_translation_domain }) }}
            {{ form_widget(child) }}
        {% endfor %}
    </div>
{%- endblock choice_widget_expanded -%}

{%- block ckeditor_widget_extra -%}
    ['i', 'span'].forEach(function (tag) {
        CKEDITOR.dtd.$removeEmpty[tag] = false;
    });

    CKEDITOR.on('instanceReady', function () {
        CKEDITOR.instances['{{ id }}'].config.contentsLangDirection = CKEDITOR.lang.rtl['{{ locale }}'] ? 'rtl' : 'ltr';
    });
{%- endblock -%}

{%- block collection_widget -%}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' js-collection')|trim}) %}
    {% if allow_add %}
        {% set attr = attr|merge({
            'data-allow-add': 1,
            'data-index':     form.children is not empty ? max(form.children|keys)|number_format + 1 : 0,
            'data-name':      name,
        }) %}
    {% endif %}
    {% if allow_delete %}
        {% set attr = attr|merge({'data-allow-delete': 1}) %}
    {% endif %}
    {{ parent() }}
{%- endblock collection_widget -%}

{%- block darvin_admin_ace_editor_widget -%}
    <textarea {{ block('widget_attributes') }}>{{ value }}</textarea>
    <div id="{{ id }}_ace_editor"></div>
    <script>
        $(function () {
            ace.config.set('basePath', '/bundles/darvinadmin/node_modules/ace-builds/src-min-noconflict');
            var $textarea = $('#{{ id }}').hide(),
                editor    = ace.edit('{{ id }}_ace_editor', JSON.parse('{{ config|json_encode|e('js') }}')),
                ready     = false;
            editor.setShowPrintMargin(false);
            editor.session.setValue($textarea.val());
            editor.session.on('change', function () {
                $textarea.val(editor.session.getValue());
            });
            editor.renderer.on('afterRender', function () {
                if (ready) {
                    return;
                }
                $(editor.container)
                {%- for name, value in attr -%}
                    .attr('{{ name }}', '{{ value }}')
                {%- endfor -%}
                {%- for name, value in style -%}
                    .css({'{{ name }}': '{{ value }}'})
                {%- endfor -%}
                ;
                ready = true;
            });
        });
    </script>
{%- endblock darvin_admin_ace_editor_widget -%}

{%- block darvin_admin_dropzone_widget -%}

    {% import _self as that %}

    {% if data and data is not empty %}
        <div class="js-images" data-sort-url="{{ path('darvin_image_image_sort') }}">
            {% for image in data %}
                {% if image.id %}
                    {{ that.image(image, toggle_enabled) }}
                {% endif %}
            {% endfor %}
        </div>
    {% endif %}
    {{ form_widget(form) }}
{%- endblock darvin_admin_dropzone_widget -%}

{%- block darvin_admin_el_finder_text_widget -%}

    {% set attr   = attr|merge({'class': (attr.class|default ~ ' pull-left')|trim}) %}
    {% set margin = 0.1 %}
    {% set url    = path('elfinder', {'instance': 'darvin_admin_text', 'field': full_name}) %}

    <div class="input_value">
        <input type="text" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
        <button type="button"
                class="btn btn-default pull-left"
                style="margin: 0 10px;"
                title="{% trans %}form.el_finder_text.title{% endtrans %}"
                onclick="window.open('{{ url }}', null, [
                    'width=' + (window.outerWidth - window.outerWidth * {{ margin }} * 2),
                    'height=' + (window.outerHeight - window.outerWidth * {{ margin }} * 2),
                    'left=' + (window.outerWidth * {{ margin }}),
                    'top=' + (window.outerWidth * {{ margin }})
                ].join(','));">
            &hellip;
        </button>
    </div>
    {{ block('help') }}
{%- endblock darvin_admin_el_finder_text_widget -%}

{%- block darvin_admin_slug_suffix_widget -%}
    {% if is_homepage %}
        {{ form_widget(form) }}
    {% else %}

        {% set url_parts = (app.request.baseUrl ~ route_path)|replace({'{_locale}': app.request.locale})|split('{' ~ route_param_slug ~ '}') %}

        {% set url_prefix = url_parts[0] ~ slug_prefix %}
        {% set url_suffix = url_parts[1] %}

        {% set url_parts = [url_prefix] %}

        {% if not slug %}

            {% set url_parts = url_parts|merge(['___']) %}

        {% endif %}

        {% set url_parts = url_parts|merge([url_suffix]) %}

        {% set url = slug ? path(route, {(route_param_slug): slug}) : url_parts|join('') %}

        <div class="input_value">
            <div class="js-slug{% if not slug %} js-slug-changed{% endif %}"
                 data-default-url="{{ url }}"
                 data-parent-select="{{ parent_select_selector }}"
                 data-url-prefix="{{ url_prefix }}"
                 data-url-suffix="{{ url_suffix }}">
                <div class="js-slug-link"{% if errors is not empty %} style="display: none;"{% endif %}>
                    <a href="{{ url }}" target="_blank">{{ url }}</a>
                    <button class="js-slug-edit" type="button">
                        {% trans %}slug_suffix.edit{% endtrans %}
                    </button>

                    {% block reset_button %}
                        <button class="js-slug-reset" type="button" style="display: none;">
                            {% trans %}slug_suffix.reset{% endtrans %}
                        </button>
                    {% endblock %}

                </div>
                <div class="js-slug-form"{% if errors is empty %} style="display: none;"{% endif %}>
                    <span class="js-slug-url-prefix">{{ url_prefix ~ (slug ~ '$')|replace({(data ~ '$'): ''}) }}</span>
                    {{ form_widget(form, {'hide_help': true, 'attr': {'data-default': data}}) }}
                    <span>{{ url_suffix }}</span>
                    <button class="js-slug-update" type="button">
                        {% trans %}slug_suffix.update{% endtrans %}
                    </button>

                    {{ block('reset_button') }}

                </div>
            </div>
        </div>
        {{ block('help') }}
    {% endif %}
{%- endblock darvin_admin_slug_suffix_widget -%}

{%- block darvin_admin_translatable_widget -%}
    {{ block('a2lix_translations_widget') }}
{%- endblock darvin_admin_translatable_widget -%}

{%- block darvin_image_image_row -%}
    <div class="table_row childless">
        {{ form_label(form) }}
        {{ form_widget(form) }}
        {{ form_errors(form) }}
    </div>
{%- endblock darvin_image_image_row -%}

{%- block darvin_image_image_widget -%}

    {% import _self as that %}

    <div class="input_value">
        {% if data %}
            {{ that.image(data, toggle_enabled) }}
        {% endif %}
        {{ form_widget(form) }}
    </div>
    {{ block('help') }}
{%- endblock darvin_image_image_widget -%}

{%- block form_errors -%}
    {% if errors is not empty %}
        <ul class="input_value-error js-form-errors">
            {% for error in errors %}
                <li>{{ error.message }}</li>
            {% endfor %}
        </ul>
    {% endif %}
{%- endblock form_errors -%}

{%- block form_label -%}
    {% if label is not same as(false) -%}
        {% set is_editor = block_prefixes[3]|default in ['ckeditor', 'darvin_admin_ace_editor'] %}
        {% if not is_editor %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default ~ ' name')|trim}) %}
        {% endif %}
        {% if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {% if required -%}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {%- endif -%}
        {% if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- else -%}
                {% set label = name|humanize %}
            {%- endif -%}
        {%- endif -%}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
            {{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}{% if not is_editor %}:{% endif %}
        </label>
    {%- endif -%}
{%- endblock form_label -%}

{%- block form_row -%}
    <div class="table_row{% if form.children is empty %} childless{% endif %}">
        {{ form_label(form) }}
        {{ form_widget(form) }}
        {{ form_errors(form) }}
    </div>
{%- endblock form_row -%}

{%- block form_widget_compound -%}
    <div class="compound">
        {{ parent() }}
    </div>
{%- endblock form_widget_compound -%}

{%- block form_widget_simple -%}
    {% if 'hidden' == type|default %}
        {{ parent() }}
    {% else %}
        <div class="input_value">
            {{ parent() }}
        </div>
        {{ block('help') }}
    {% endif %}
{%- endblock form_widget_simple -%}

{%- block help -%}
    {% if 'hidden' != block_prefixes[1]
        and (hide_help is not defined or not hide_help
        and (not form.parent or 'darvin_image_image' != form.parent.vars.block_prefixes[1])
        ) %}
        <div class="description">{% if help %}{{ help|trans({}, translation_domain)|raw }}{% endif %}</div>
    {% endif %}
{%- endblock help -%}

{%- block radio_widget -%}
    <div class="input_value">
        {{ parent() }}
    </div>
    {{ block('help') }}
{%- endblock radio_widget -%}

{%- block submit_widget -%}
    {% set id = null %}
    {{ parent() }}
{%- endblock submit_widget -%}

{%- block textarea_widget -%}
    <div class="input_value">
        {{ parent() }}
    </div>
    {{ block('help') }}
{%- endblock textarea_widget -%}

{%- block vich_image_row -%}
    <div class="table_row childless">
        {{ form_label(form) }}
        {{ form_widget(form) }}
    </div>
{%- endblock vich_image_row -%}

{%- block vich_image_widget -%}
    <div {{ block('widget_container_attributes') }}>
        {{ form_widget(form.file, {'required': false}) }}
        {{ form_errors(form) }}
        {% if form.delete is defined %}
            {{ form_row(form.delete, {'translation_domain': 'VichUploaderBundle'}) }}
        {% endif %}

        {% if download_uri is defined and download_uri %}
            <a class="js-popup" href="{{ download_uri }}"><img src="{{ download_uri|imagine_filter('darvin_admin_thumb') }}" alt="" /></a>
        {% endif %}
    </div>
{%- endblock vich_image_widget -%}

{%- block widget_attributes -%}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ' ~ block_prefixes[1])|trim}) %}
    {{ parent() }}
{%- endblock widget_attributes -%}
#}
