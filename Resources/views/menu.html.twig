{% trans_default_domain 'admin' %}

{% import _self as that %}

{% macro item(item, show_icon) %}

    {% import _self as that %}

    {% set classes   = [] %}
    {% set has_count = item.newObjectCount
        or (item.associatedObject and utils_new_objects_countable(item.associatedObject) and utils_count_new_objects(item.associatedObject))
    %}

    {% if item.children is not empty %}

        {% set classes = classes|merge(['-has-dropdown']) %}

    {% endif %}
    {% if show_icon %}

        {% set classes = classes|merge(['icon-' ~ item.name]) %}

    {% endif %}
    {% if item.active %}

        {% set classes = classes|merge(['is-active']) %}

    {% endif %}

    <li{% if classes is not empty %} class="{{ classes|join(' ') }}"{% endif %}>
        <a href="{{ item.indexUrl }}"{% if has_count %} class="has-count"{% endif %}>
            {{ item.indexTitle|trans }}{% if has_count %} <span>{{ item.newObjectCount ?: utils_count_new_objects(item.associatedObject) }}</span>{% endif %}
        </a>
        {% if item.children is not empty %}
            <div>
                <ul>
                    {% for child in item.children %}
                        {{ that.item(child) }}
                    {% endfor %}
                </ul>
            </div>
        {% endif %}
    </li>
{% endmacro %}

{% if items is not empty %}
    <ul class="main-menu__root is-root">
        {% for item in items %}

            {{ that.item(item, true) }}

        {% endfor %}
    </ul>
{% endif %}
